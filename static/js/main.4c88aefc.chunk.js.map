{"version":3,"sources":["../../src/SortableSelectInput.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","color","primary","paddingTop","left","paddingLeft","border","input","display","padding","height","valueContainer","flexWrap","flex","alignItems","paddingBottom","minHeight","chip","margin","chipFocused","backgroundColor","emphasize","noOptionsMessage","singleValue","fontSize","placeholder","position","paper","zIndex","marginTop","right","divider","inputComponent","inputRef","props","ref","DroppableValueContainer","onDragEnd","droppableId","type","direction","provided","className","DraggableChip","handleOnMouseDown","e","draggableId","index","innerRef","tabIndex","label","clsx","onDelete","event","onMouseDown","clickable","snapshot","isDragging","components","Control","classes","fullWidth","required","InputProps","inputProps","children","Menu","square","MultiValue","NoOptionsMessage","Option","buttonRef","selected","component","style","fontWeight","Placeholder","SingleValue","ValueContainer","React","handleOnChange","value","classNamePrefix","onChange","container","defaultItems","i","push","id","class","order","App","useState","itemValues","fieldValue","setFieldValue","name","map","val","handleChipChange","textFieldProps","variant","InputLabelProps","shrink","options","item","isMulti","isSortable","result","destination","items","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c88aefc.chunk.js","sourcesContent":["import Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { emphasize } from '@material-ui/core/styles/colorManipulator';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport Select from 'react-select';\nimport Creatable from 'react-select/creatable';\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\t'& .fuse-chip-select__input': {\n\t\t\tcolor: theme.palette.text.primary\n\t\t},\n\t\t'&.standard': {\n\t\t\t'& $placeholder': {},\n\t\t\t'& $valueContainer': {\n\t\t\t\tpaddingTop: 4\n\t\t\t}\n\t\t},\n\t\t'&.filled': {\n\t\t\t'& $placeholder': {\n\t\t\t\tleft: 12\n\t\t\t},\n\t\t\t'& $valueContainer': {\n\t\t\t\tpaddingTop: 24,\n\t\t\t\tpaddingLeft: 12\n\t\t\t},\n\t\t\t'& $chip': {\n\t\t\t\tborder: '1px solid rgba(0, 0, 0, 0.12)'\n\t\t\t}\n\t\t},\n\t\t'&.outlined': {\n\t\t\t'& $placeholder': {\n\t\t\t\tleft: 12\n\t\t\t},\n\t\t\t'& $valueContainer': {\n\t\t\t\tpaddingLeft: 12,\n\t\t\t\tpaddingTop: 12\n\t\t\t}\n\t\t}\n\t},\n\tinput: {\n\t\tdisplay: 'flex',\n\t\tpadding: 0,\n\t\theight: 'auto'\n\t},\n\tvalueContainer: {\n\t\tdisplay: 'flex',\n\t\tflexWrap: 'wrap',\n\t\tflex: 1,\n\t\talignItems: 'center',\n\t\tpaddingBottom: 4,\n\t\tpaddingTop: 12,\n\t\tminHeight: 40\n\t},\n\tchip: {\n\t\tmargin: '4px 4px 4px 0'\n\t},\n\tchipFocused: {\n\t\tbackgroundColor: emphasize(\n\t\t\ttheme.palette.type === 'light'\n\t\t\t\t? theme.palette.grey[300]\n\t\t\t\t: theme.palette.grey[700],\n\t\t\t0.08\n\t\t)\n\t},\n\tnoOptionsMessage: {\n\t\tpadding: `${theme.spacing()}px ${theme.spacing(2)}px`\n\t},\n\tsingleValue: {\n\t\tfontSize: 16\n\t},\n\tplaceholder: {\n\t\tposition: 'absolute',\n\t\tleft: 0,\n\t\tfontSize: 16,\n\t\tmargin: 0\n\t},\n\tpaper: {\n\t\tposition: 'absolute',\n\t\tzIndex: 2,\n\t\tmarginTop: theme.spacing(),\n\t\tleft: 0,\n\t\tright: 0\n\t},\n\tdivider: {\n\t\theight: theme.spacing(2)\n\t}\n}));\n\nfunction NoOptionsMessage(props) {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Typography\n\t\t\tcolor=\"textSecondary\"\n\t\t\tclassName={classes.noOptionsMessage}\n\t\t\t{...props.innerProps}\n\t\t>\n\t\t\t{props.children}\n\t\t</Typography>\n\t);\n}\n\nfunction inputComponent({ inputRef, ...props }) {\n\treturn <div ref={inputRef} {...props} />;\n}\n\nfunction Control(props) {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<TextField\n\t\t\tfullWidth\n\t\t\tclassName={clsx(\n\t\t\t\tclasses.root,\n\t\t\t\tprops.selectProps.textFieldProps.variant\n\t\t\t)}\n\t\t\trequired={props.selectProps.required}\n\t\t\tInputProps={{\n\t\t\t\tinputComponent,\n\t\t\t\tinputProps: {\n\t\t\t\t\tclassName: classes.input,\n\t\t\t\t\tinputRef: props.innerRef,\n\t\t\t\t\tchildren: props.children,\n\t\t\t\t\t...props.innerProps\n\t\t\t\t}\n\t\t\t}}\n\t\t\t{...props.selectProps.textFieldProps}\n\t\t/>\n\t);\n}\n\nfunction Option(props) {\n\treturn (\n\t\t<MenuItem\n\t\t\tbuttonRef={props.innerRef}\n\t\t\tselected={props.isFocused}\n\t\t\tcomponent=\"div\"\n\t\t\tstyle={{\n\t\t\t\tfontWeight: props.isSelected ? 600 : 400\n\t\t\t}}\n\t\t\t{...props.innerProps}\n\t\t>\n\t\t\t{props.children}\n\t\t</MenuItem>\n\t);\n}\n\nfunction Placeholder(props) {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Typography\n\t\t\tcolor=\"textSecondary\"\n\t\t\tclassName={classes.placeholder}\n\t\t\t{...props.innerProps}\n\t\t>\n\t\t\t{props.children}\n\t\t</Typography>\n\t);\n}\n\nfunction SingleValue(props) {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.singleValue} {...props.innerProps}>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n}\n\nfunction ValueContainer(props) {\n\tconst classes = useStyles();\n\n\tconst valueContainerComponent = props.selectProps.isSortable ? (\n\t\t<DroppableValueContainer classes={classes} {...props} />\n\t) : (\n\t\t<div className={classes.valueContainer}>{props.children}</div>\n\t);\n\n\treturn valueContainerComponent;\n}\n\nfunction DroppableValueContainer(props) {\n\tconst { onDragEnd } = props.selectProps;\n\n\treturn (\n\t\t<DragDropContext onDragEnd={onDragEnd}>\n\t\t\t<Droppable\n\t\t\t\tdroppableId=\"valueContainer\"\n\t\t\t\ttype=\"list\"\n\t\t\t\tdirection=\"horizontal\"\n\t\t\t>\n\t\t\t\t{provided => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\tclassName={props.classes.valueContainer}\n\t\t\t\t\t>\n\t\t\t\t\t\t{props.children}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Droppable>\n\t\t</DragDropContext>\n\t);\n}\n\nfunction MultiValue(props) {\n\tconst classes = useStyles();\n\n\tconst chipComponent = props.selectProps.isSortable ? (\n\t\t<DraggableChip classes={classes} {...props} />\n\t) : (\n\t\t<Chip\n\t\t\ttabIndex={-1}\n\t\t\tlabel={props.children}\n\t\t\tclassName={clsx(\n\t\t\t\tclasses.chip,\n\t\t\t\t{\n\t\t\t\t\t[classes.chipFocused]: props.isFocused\n\t\t\t\t},\n\t\t\t\tprops.data.class\n\t\t\t)}\n\t\t\tonDelete={event => {\n\t\t\t\tprops.removeProps.onClick();\n\t\t\t\tprops.removeProps.onMouseDown(event);\n\t\t\t}}\n\t\t/>\n\t);\n\n\treturn chipComponent;\n}\n\nfunction DraggableChip(props) {\n\tconst handleOnMouseDown = e => {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t};\n\treturn (\n\t\t<Draggable draggableId={props.children} type=\"list\" index={props.index}>\n\t\t\t{(provided, snapshot) => (\n\t\t\t\t<div ref={provided.innerRef} {...provided.draggableProps}>\n\t\t\t\t\t<Chip\n\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\tlabel={props.children}\n\t\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t\tprops.classes.chip,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t[props.classes.chipFocused]: props.isFocused\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tprops.data.class\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tonDelete={event => {\n\t\t\t\t\t\t\tprops.removeProps.onClick();\n\t\t\t\t\t\t\tprops.removeProps.onMouseDown(event);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\t{...props.data.props}\n\t\t\t\t\t\tonMouseDown={handleOnMouseDown}\n\t\t\t\t\t\tclickable={snapshot.isDragging}\n\t\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Draggable>\n\t);\n}\n\nfunction Menu(props) {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Paper square className={classes.paper} {...props.innerProps}>\n\t\t\t{props.children}\n\t\t</Paper>\n\t);\n}\n\nconst components = {\n\tControl,\n\tMenu,\n\tMultiValue,\n\tNoOptionsMessage,\n\tOption,\n\tPlaceholder,\n\tSingleValue,\n\tValueContainer\n};\n\nfunction SortableSelectInput(props) {\n\tconst handleOnChange = value => {\n\t\tif (value === null) {\n\t\t\tvalue = [];\n\t\t}\n\t\tif (props.onChange) {\n\t\t\tprops.onChange(value);\n\t\t}\n\t};\n\n\treturn props.variant === 'fixed' ? (\n\t\t<Select\n\t\t\tclassNamePrefix=\"fuse-chip-select\"\n\t\t\t{...props}\n\t\t\tcomponents={components}\n\t\t\tonChange={handleOnChange}\n\t\t/>\n\t) : (\n\t\t<Creatable\n\t\t\tclassNamePrefix=\"fuse-chip-select\"\n\t\t\t{...props}\n\t\t\tcomponents={components}\n\t\t\tonChange={handleOnChange}\n\t\t/>\n\t);\n}\n\nexport default React.memo(SortableSelectInput);\n","import React, { useState } from 'react'\nimport SortableSelectInput from 'react-sortable-select'\n\nconst classes = {\n  container: {\n    margin: 20\n  }\n}\n\nconst defaultItems = []\nfor (let i = 1; i <= 10; i++) {\n  defaultItems.push({\n    id: i,\n    label: `Item ${i}`,\n    class: 'bg-red',\n    order: i\n  })\n}\n\nconst App = () => {\n  const [itemValues, setItemValues] = useState()\n  const [fieldValue, setFieldValue] = useState()\n\n  function handleChipChange(name, value) {\n    setFieldValue(value.map((val, index) => ({ ...val, order: index + 1 })))\n  }\n\n  function handleOnDragEnd(result) {\n    const reorder = (list, startIndex, endIndex) => {\n      const result = Array.from(list)\n      const [removed] = result.splice(startIndex, 1)\n      result.splice(endIndex, 0, removed)\n\n      return result\n    }\n\n    // dropped outside the list\n    if (!result.destination) {\n      return\n    }\n\n    const items = reorder(\n      fieldValue,\n      result.source.index,\n      result.destination.index\n    )\n\n    setFieldValue(\n      items.map((item, index) => ({\n        ...item,\n        order: index + 1\n      }))\n    )\n  }\n\n  return (\n    <div style={classes.container}>\n      <SortableSelectInput\n        className=''\n        name='itemValues'\n        value={itemValues}\n        onChange={(value, index) =>\n          handleChipChange('itemValues', value, index)\n        }\n        placeholder='Select multiple items'\n        textFieldProps={{\n          label: 'items',\n          variant: 'outlined',\n          InputLabelProps: {\n            shrink: true\n          }\n        }}\n        options={defaultItems.map((item) => ({\n          value: item.id,\n          label: item.label,\n          class: item.class\n        }))}\n        isMulti\n        isSortable\n        onDragEnd={handleOnDragEnd}\n        fullWidth\n        variant='fixed'\n      />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}